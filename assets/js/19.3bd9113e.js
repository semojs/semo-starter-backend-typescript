(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{365:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"命令管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令管理"}},[t._v("#")]),t._v(" 命令管理")]),t._v(" "),a("p",[t._v("对于一个业务后端服务或者底层服务的运维，除了确保服务的稳定运行，接口效率，异常排查之外，还可能有一些常规动作，比如快速获得一些信息，或者快速对数据状态进行更改，这些需求有时是临时需求，有时候会不断重复提类似的。比如：重置用户密码，重置用户 Token 等等。")]),t._v(" "),a("p",[t._v("对于这类需求，在没有后台支持的情况下，我们往往只能直接去修改数据库，这很不方便，而有时非常不直接，可能修改之前需要先执行几个复杂的计算逻辑，这样就更是会耗费很长的时间做这些手动操作。对于同样的一个运维功能，当然开发成后台可以让更多的人使用，但是一方面开发成后台的成本比较高，另外不是所有的功能都应该或者适合开发成后台的，比如一些危险的操作。说了这么多，主要是想说业务相关的命令行工具在日常运维中非常重要。")]),t._v(" "),a("h2",{attrs:{id:"插件命令与项目命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件命令与项目命令"}},[t._v("#")]),t._v(" 插件命令与项目命令")]),t._v(" "),a("p",[t._v("每个 Semo 的插件可能都会定义一些命令，以完成一些功能，插件的命令更多的是可复用的非业务功能，而项目内定义的命令大都是和这个项目密切相关的，可以是检索和查看命令，也可以是问题数据的自动修复，数据的批处理等等。")]),t._v(" "),a("h2",{attrs:{id:"定义一个命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义一个命令"}},[t._v("#")]),t._v(" 定义一个命令")]),t._v(" "),a("p",[t._v("理论上，可以随意定义一级子命令，只要不与内置命令重复。但是我们还是推荐少占用一级子命令。另外，我们可以约定每个项目的子命令都挂在 application 这个一级子命令下。这样，我们可以为 application 建立别名快捷方式。")]),t._v(" "),a("p",[t._v("脚手架目前已经内置了 application 这个一级子命令，只需要去自定义二级子命令即可。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" semo-plugin-application\nsemo generate "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" --extend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("application application/a-command "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a command'")]),t._v("\nsemo generate "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" --extend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("application application/a-command/sub-command "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a sub command'")]),t._v("\n")])])]),a("h2",{attrs:{id:"命令行文件写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行文件写法"}},[t._v("#")]),t._v(" 命令行文件写法")]),t._v(" "),a("p",[t._v("Semo 的命令行是基于 "),a("code",[t._v("yargs")]),t._v(" 这个 npm 包提供的机制设计的，同时做了一些简单的扩展，通过 "),a("code",[t._v("semo make command")]),t._v(" 可以自动生成一个命令样板文件。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ semo generate "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" --extend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("semo application/test\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" disabled "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set to true to disable this command temporarily")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" command "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" desc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// export const aliases = ''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// export const middleware = (argv) => {}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("builder")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("yargs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// yargs.option('option', { default, describe, alias })")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// yargs.commandDir('test')")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("argv"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Start to draw your dream code!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"常用的-semo-工具方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的-semo-工具方法"}},[t._v("#")]),t._v(" 常用的 Semo 工具方法")]),t._v(" "),a("p",[t._v("Semo 向外暴露了一个工具对象，里面内置了很多方法和常用包的引用，这里和开发命令行很相关的有如下几个：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Utils "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@semo/core'")]),t._v("\n\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lodash")]),t._v("\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inquirer "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 终端输入提示")]),t._v("\n\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本的对象输出，复杂对象可以美化输出结构")]),t._v("\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 信息提示，默认颜色输出为蓝色")]),t._v("\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 警告提示，默认颜色输出为黄色")]),t._v("\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功提示，默认颜色输出为绿色")]),t._v("\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误提示，默认颜色输出为红色，并会退出脚本")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);